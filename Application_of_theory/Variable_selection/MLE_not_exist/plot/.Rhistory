p = 200
delta=n/p
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
delta
# check separable
library(MASS)
f <- function(x){
exp(x)/(1 + exp(x))
}
f <- function(x){
exp(x)/(1 + exp(x))
}
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
for(rho in c(0,0.1,0.2,0.3,0.4)){
repeat_function<-function(rep_i){
set.seed(rep_i)
Sigma = matrix(0, nrow = p, ncol = p)
for(i in 1:p){
for(j in 1:p){
Sigma[i,j] = rho^abs(i-j)
}
}
X = mvrnorm(n, mu = rep(0, p), Sigma = Sigma)*1/sqrt(n)
signal_index = sample(1:p, size = s, replace = F)
beta = numeric(p)
beta[signal_index] = sample(c(-1, 1), s, replace = T)*signal_strengthscala
mu = X %*% beta
y = rbinom(n, size = 1, prob = f(mu))
warning_indeicator=NULL
tryCatch({
# Attempt to execute the function
glm(y~X-1,family = "binomial")
warning_indeicator <<- 0
}, warning = function(w) {
# If a warning occurs, set result to 1
warning_indeicator <<- 1
})
return(warning_indeicator)
}
print((sapply(1:50,repeat_function)))
}
sample(c(-1, 1), 20, replace = T)
load("C:/Users/e0708167/OneDrive - National University of Singapore/CGMT_cat/numerical_study/application_theory_procedure/scalable_free_daichengguang_compare/fig2/MAP/n500extra/May3_p200MAPvary_signal_22.3606797749979s40cor0.2.RData")
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
load("C:/Users/e0708167/OneDrive - National University of Singapore/CGMT_cat/numerical_study/application_theory_procedure/scalable_free_daichengguang_compare/fig2/MAP/n500extra/May3_p200MAPvary_signal_26.8328157299975s40cor0.2.RData")
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
load("C:/Users/e0708167/OneDrive - National University of Singapore/CGMT_cat/numerical_study/application_theory_procedure/scalable_free_daichengguang_compare/fig2/MAP/n500extra/MAY3_p200MAPvary_cor_0s40sig_sqrt_n.RData")
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
#summary
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
#summary
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
# summary
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
# summary
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
# summary
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
delta=n/p
signal_strengthscala = sqrt(n)
#summary
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
print(rho)
print( apply(result_matrix[,fdr_col_index],2,mean))
print( apply(result_matrix[,power_col_index],2,mean))
}
setwd("C:/Users/e0708167/OneDrive - National University of Singapore/CGMT_cat/numerical_study/application_theory_procedure/scalable_free_daichengguang_compare/fig2/MAP/n500extra/plot")
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
library(ggplot2)
library(reshape2)
library(cowplot)
library(gridExtra)
fdrcor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powercor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13)
power_col_index=c(8,11,14)
fdrcor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powercor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powercor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
install.packages("reshape2")
library(cowplot)
install.packages("cowplot")
library(ggplot2)
library(reshape2)
library(cowplot)
library(gridExtra)
fdrcor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powercor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13)
power_col_index=c(8,11,14)
fdrcor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powercor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powercor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrcor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotcorup=ggplot(long_dffdr, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)
plotcordown=ggplot(long_dfpower, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Toeplitz correlation",
y = "Power") +
theme_minimal()+ylim(0,0.6)
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
fdrsig_dataframe <- data.frame(Signal=c(1,1.2,1.5,1.8,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=c(1,1.2,1.5,1.8,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== c(1,1.2,1.5,1.8,2)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == c(1,1.2,1.5,1.8,2)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Scaled signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.6)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
long_dffdr
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
fdrsig_dataframe <- data.frame(Signal=sig_sequence, m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=sig_sequence, m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== sig_sequence),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == sig_sequence),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Scaled signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.6)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
library(ggplot2)
library(reshape2)
library(cowplot)
library(gridExtra)
fdrcor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powercor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13)
power_col_index=c(8,11,14)
fdrcor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powercor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powercor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrcor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotcorup=ggplot(long_dffdr, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)
plotcordown=ggplot(long_dfpower, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Toeplitz correlation",
y = "Power") +
theme_minimal()+ylim(0,0.9)
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
fdrsig_dataframe <- data.frame(Signal=sig_sequence, m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=sig_sequence, m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== sig_sequence),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == sig_sequence),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Scaled signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.9)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
long_dffdr
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.2,1.5,1.8,2)
fdrsig_dataframe <- data.frame(Signal=c(1,1.2,1.5,1.8,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=c(1,1.2,1.5,1.8,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== sig_sequence),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == sig_sequence),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Scaled signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.9)+
scale_x_continuous(breaks=c(1,1.2,1.5,1.8,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
library(ggplot2)
library(reshape2)
library(cowplot)
library(gridExtra)
fdrcor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powercor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13)
power_col_index=c(8,11,14)
fdrcor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powercor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powercor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrcor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotcorup=ggplot(long_dffdr, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)
plotcordown=ggplot(long_dfpower, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Toeplitz correlation",
y = "Power") +
theme_minimal()+ylim(0,0.9)
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.25,1.5,1.75,2)
fdrsig_dataframe <- data.frame(Signal=c(1,1.25,1.5,1.75,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=c(1,1.25,1.5,1.75,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== sig_sequence),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == sig_sequence),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.25,1.5,1.75,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.9)+
scale_x_continuous(breaks=c(1,1.25,1.5,1.75,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
p = 200
n = 500
s = 40
q = 0.1
M=20*p
delta=n/p
signal_strengthscala = sqrt(n)
library(ggplot2)
library(reshape2)
library(cowplot)
library(gridExtra)
fdrcor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powercor_dataframe <- data.frame(cor=c(0,0.1,0.2,0.3,0.4), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(rho in c(0,0.1,0.2,0.3,0.4)){
load(paste0('MAY3_p',p,'MAPvary_cor_',rho,'s',s,'sig_sqrt_n.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13)
power_col_index=c(8,11,14)
fdrcor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powercor_dataframe[which(rho==c(0,0.1,0.2,0.3,0.4)),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powercor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrcor_dataframe, id.vars = 'cor', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <- rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotcorup=ggplot(long_dffdr, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)
plotcordown=ggplot(long_dfpower, aes(x = cor, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Toeplitz correlation",
y = "Power") +
theme_minimal()+ylim(0,0.9)
######### now for signal strength part
rho=0.2
sig_sequence=sqrt(n)*c(1,1.25,1.5,1.75,2)
fdrsig_dataframe <- data.frame(Signal=c(1,1.25,1.5,1.75,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
powersig_dataframe <- data.frame(Signal=c(1,1.25,1.5,1.75,2), m1=c(0,0.1,0.2,0.3,0.4),
m2=c(0,0.1,0.2,0.3,0.4),m3=c(0,0.1,0.2,0.3,0.4))
for(signal_strengthscalr in sig_sequence){
load(paste0('May3_p',p,'MAPvary_signal_',signal_strengthscalr,'s',s,'cor',rho,'.RData'))
result_matrix=matrix(unlist(data_save_list),nc=15,byrow = T)
fdr_col_index=c(7,10,13 )
power_col_index=c(8,11,14 )
fdrsig_dataframe[which(signal_strengthscalr== sig_sequence),c(2,3,4)]=apply(result_matrix[,fdr_col_index],2,mean)
powersig_dataframe[which(signal_strengthscalr == sig_sequence),c(2,3,4)]=apply(result_matrix[,power_col_index],2,mean)
}
long_dfpower <- melt(powersig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dfpower$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
long_dffdr <- melt(fdrsig_dataframe, id.vars = 'Signal', variable.name = 'Method', value.name = 'Error')
long_dffdr$Method <-  rep(c('MDS(MAP)', 'ABH(MAP)', 'ABY(MAP)'),each=5)
plotsigup=ggplot(long_dffdr, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(y = "FDR",x="") +
theme_minimal()+ylim(0.0,0.15)+
scale_x_continuous(breaks=c(1,1.25,1.5,1.75,2))
plotsigdown=ggplot(long_dfpower, aes(x = Signal, y = Error, color = Method,shape=Method)) +
geom_point() +  # or geom_point() if you prefer points
labs(x = "Signal strength",
y = "Power") +
theme_minimal()+ylim(0,0.9)+
scale_x_continuous(breaks=c(1,1.25,1.5,1.75,2))
grid.arrange(plotcorup, plotsigup, plotcordown,plotsigdown, nrow = 2,ncol=2)
