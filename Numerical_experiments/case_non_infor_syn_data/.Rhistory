return(matrix(rt(p*n,df=4)/sqrt(p*2),nc=p))
}
if(design_type=="t3"){
return(matrix(rt(p*n,df=3)/sqrt(p*3),nc=p))
}
}
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
beta_s=betahat_store[,which.max(corr_store)]
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta0)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
beta_s=betahat_store[,which.max(corr_store)]
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
beta_s=betahat_store[,which.max(corr_store)]
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
beta_s=betahat_store[,which.max(corr_store)]/sqrt(2)
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
beta_s=betahat_store[,which.max(corr_store)]/2
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
beta_s=betahat_store[,which.max(corr_store)]/2
print(paste0("norm of beta is ",norm(betahat_store[,which.max(corr_store)],type="2")))
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
print(paste0("norm of beta is ",norm(beta_true,type="2")))
beta_s=betahat_store[,which.max(corr_store)]/2
print(paste0("norm of beta is ",norm(betahat_store[,which.max(corr_store)],type="2")))
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
print(paste0("norm of beta is ",norm(beta_true,type="2")))
beta_s=betahat_store[,which.max(corr_store)]/5
print(paste0("norm of beta is ",norm(betahat_store[,which.max(corr_store)],type="2")))
M=M*4
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=1)
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=10)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
print(paste0("norm of beta is ",norm(beta_true,type="2")))
beta_s=betahat_store[,which.max(corr_store)]/5
print(paste0("norm of beta is ",norm(betahat_store[,which.max(corr_store)],type="2")))
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=10)
empirical_simulation_non_infor_syn_data<-function(delta,m,kappa1,tau_0_seq,
design_type="Gaussian",beta_true_gen="normal",p=250,rep_index){
n=p*delta
M=m*n
set.seed(rep_index)
beta_true=generate_beta(p,kappa1,beta_true_gen)
X=generate_design_X(n,p,design_type)
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
prop1= 1/(1+exp(-X%*%beta_true))
y1=rbinom(n,1,prop1)
prop2= 1/(1+exp(rep(0,M)))
ystar=rbinom(M,1,prop2)
MSE_store=rep(0,length(tau_0_seq))
corr_store=rep(0,length(tau_0_seq))
betahat_store=matrix(0,p,length(tau_0_seq))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
betahat_store[,tau_0_index]=beta_hat
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
print(paste0("norm of beta is ",norm(beta_true,type="2")))
beta_s=betahat_store[,which.max(corr_store)]/5
print(paste0("norm of beta is ",norm(betahat_store[,which.max(corr_store)],type="2")))
M=M*10
Xstar=matrix(rnorm(p*M,mean=0,sd=sqrt(1/p)),nc=p)
ystar=rbinom(M,1, 1/(1+exp(-Xstar%*%beta_s)))
for(tau_0_index in 1:length(tau_0_seq)){
tau=tau_0_seq[tau_0_index]*n
wt=c(rep(1,n),rep(tau/M,M))
fit_lambda_seq<-glmnet(rbind(X,Xstar),c(y1,ystar),weights = wt,
family = "binomial",alpha=0,lambda = 0,intercept = FALSE,standardize = FALSE)
beta_hat=as.numeric(fit_lambda_seq$beta )
MSE_store[tau_0_index]=norm(beta_hat-beta_true,type="2")^2/p
corr_store[tau_0_index]=sum(beta_hat*beta_true)/sqrt(sum(beta_hat^2)*sum(beta_true^2))
}
print(paste0("largest corr is ",max(corr_store)))
print(paste0("min mse is ",min(MSE_store)))
}
delta=4
kappa1=2
m=20/delta
design_type="Gaussian"
beta_true_gen="t3"
empirical_simulation_non_infor_syn_data(delta,m,kappa1,tau_0_seq,
design_type,beta_true_gen,p=250,rep_index=10)
